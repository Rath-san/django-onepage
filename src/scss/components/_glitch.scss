.glitch-anim-2,
.glitch-anim-2--visible {
  $glitch2_duration: 0.78s;
  $glitch2_timing: $glitch2_duration 0.2s;
  $glitch2_timing: $glitch2_duration calc(0.1s + 0.1s * var(--word-index, 0));
  $glitch2_timing2: $glitch2_duration / 2
    calc(0.1s + 0.1s * var(--word-index, 0));
  $topMaxPercent: 100;
  // mix-blend-mode: screen;

  @keyframes slidetounlock {
    0% {
      background-position: 0% -100%;
    }
    100% {
      background-position: 0% 100%;
    }
  }

  * {
    // filter: contrast(170%) brightness(1300%);
    // background-size: 250% 250%;
    background:
      linear-gradient(0deg, rgba(255,255,255,0), rgba(255,255,255,1), rgba(255,255,255,0)),
    //   // linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab)
    //   // url("data:image/svg+xml,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='4.63' numOctaves='6' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
      url("data:image/svg+xml,%3Csvg viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='4.63' numOctaves='6' stitchTiles='stitch'%3E%3Canimate attributeName='seed' from='1' to='100' dur='10s' repeatCount='indefinite' /%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    // background-clip: text;
    // -webkit-background-clip: text;
    // color: transparent;
    // animation: gradient 4s ease-in-out infinite;

    // background: linear-gradient(-90deg, black 0%, gray 40%, white 45%, gray 55%, black 60%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    color: transparent;
    -webkit-animation: slidetounlock 5s infinite;
    animation: slidetounlock 5s infinite;
    -webkit-animation-direction: alternate;
    animation-direction: alternate;
    background-size: 200% 200%, 50%;
  }

  .word {
    position: relative;
    // display: inline-block;
  }
  // .word::after {
  //   content: attr(data-word);
  //   position: absolute;
  //   left: 2px;
  //   width: 100%;
  //   text-shadow: -5px -2px red;
  //   top: 0;
  //   color: white;
  //   background: transparent;
  //   overflow: hidden;
  //   @keyframes noise-anim {
  //     $steps: 20;
  //     @for $i from 0 to $steps {
  //       #{percentage($i*(1/$steps))} {
  //         $top: random($topMaxPercent);
  //         $bottom: random(101 - $top);

  //         $topWithPercent: $top * 1%;
  //         $bottomWithPercent: $bottom * 1%;

  //         clip-path: inset(#{$topWithPercent} 0 #{$bottomWithPercent} 0);
  //         // $left: 2px + ($steps - $i) * -1px;
  //         // left: 5 * round($left / 5);
  //         $x: 5 - random(20) * 1px;
  //         $y: 5 - random(10) * 1px;
  //         transform: translate($x, $y);
  //       }
  //     }
  //     100% {
  //       clip-path: inset(0 0 0 0);
  //       opacity: 0;
  //       transform: scale(1) translate(0,0) skew(0);
  //     }
  //   }
  // }
  [data-visible="true"] & .word::after {
    // animation: noise-anim $glitch2_timing linear alternate forwards;
    // animation-delay: 2s;
    // animation-iteration-count: infinite;
  }
  // .word::before {
  //   content: attr(data-word);
  //   position: absolute;
  //   left: -2px;
  //   width: 100%;
  //   text-shadow: 3px 3px blue;
  //   top: 0;
  //   color: white;
  //   background: transparent;
  //   overflow: hidden;
  //   @keyframes noise-anim-2 {
  //     $steps: 10;
  //     @for $i from 0 to $steps {
  //       #{percentage($i*(1/$steps))} {
  //         $top: random($topMaxPercent);
  //         $bottom: random(101 - $top);
  //         $topWithPercent: $top * 1%;
  //         $bottomWithPercent: $bottom * 1%;
  //         clip-path: inset(#{$topWithPercent} 0 #{$bottomWithPercent} 0);

  //         $left: -(2px + ($steps - $i) * -1px);
  //         left: 5 * round($left / 5);
  //       }
  //     }
  //     100% {
  //       clip-path: inset(0 0 0 0);
  //       opacity: 0;
  //     }
  //   }
  // }
  [data-visible="true"] & .word::before {
    // animation: noise-anim-2 $glitch2_timing linear alternate forwards;
    // animation-iteration-count: infinite;
  }

  .word {
    opacity: 0;
  }

  [data-visible="true"] & .word {
    opacity: 1;
    @keyframes glitch-anim3 {
      0% {
        opacity: 1;
      }
      100% {
        opacity: 1;
      }
    }
    @for $w from 1 through 20 {
      &:nth-child(#{$w}) {
        @keyframes glitch-anim-word#{$w} {
          $steps: 4;
          @for $i from 0 through $steps {
            #{percentage($i*(1/$steps))} {
              $x: 10 - random(20) * 1px;
              $y: 5 - random(10) * 1px;
              transform: translate($x, $y);
            }
          }
        }
        // animation: glitch-anim3 $glitch2_timing forwards,
          // glitch-anim-word#{$w} $glitch2_timing2 backwards steps(1);
        // animation-iteration-count: infinite;
      }
    }
  }

  &.section__display {
    .word {
      &::before,
      &::after {
        background: transparent;
      }
    }
  }

  &.header__logo {
    .word {
      &::before,
      &::after {
        background: transparent;
        animation-duration: 1s;
      }

      &::before {
        text-shadow: -2px -2px red;
      }

      &::after {
        text-shadow: 2px 2px blue;
      }
    }
  }

  &.infinite {
    .word {
      animation-iteration-count: infinite;
      &::before,
      &::after {
        animation-iteration-count: infinite;
      }
    }
  }

  &--visible {
    .word {
      opacity: 1 !important;
    }
  }
}


.glitch-anim-shake {
  $glitch2_duration: 0.78s;
  $glitch2_timing: $glitch2_duration 0.2s;
  $glitch2_timing: $glitch2_duration calc(0.1s + 0.1s * var(--word-index, 0));
  $glitch2_timing2: $glitch2_duration / 2
    calc(0.1s + 0.1s * var(--word-index, 0));
  $topMaxPercent: 100;

  @keyframes glitch-anim-shake {
    $steps: 4;
    @for $i from 0 through $steps {
      #{percentage($i*(1/$steps))} {
        $x: 10 - random(20) * 1px;
        $y: 5 - random(10) * 1px;
        transform: translate($x, $y);
      }
    }
  }

  .ready & {
    opacity: 1 !important;
    animation: glitch-anim-shake $glitch2_timing2 backwards steps(1);
}

}
